#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8855607464613347160) {
   out_8855607464613347160[0] = 0;
   out_8855607464613347160[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8855607464613347160[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8855607464613347160[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8855607464613347160[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8855607464613347160[5] = -sin(in_vec[1]);
   out_8855607464613347160[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8855607464613347160[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8855607464613347160[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8855607464613347160[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8855607464613347160[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8855607464613347160[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8855607464613347160[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8855607464613347160[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8855607464613347160[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8855607464613347160[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8855607464613347160[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8855607464613347160[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7551466837254102229) {
   out_7551466837254102229[0] = delta_x[0] + nom_x[0];
   out_7551466837254102229[1] = delta_x[1] + nom_x[1];
   out_7551466837254102229[2] = delta_x[2] + nom_x[2];
   out_7551466837254102229[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7551466837254102229[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7551466837254102229[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7551466837254102229[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7551466837254102229[7] = delta_x[6] + nom_x[7];
   out_7551466837254102229[8] = delta_x[7] + nom_x[8];
   out_7551466837254102229[9] = delta_x[8] + nom_x[9];
   out_7551466837254102229[10] = delta_x[9] + nom_x[10];
   out_7551466837254102229[11] = delta_x[10] + nom_x[11];
   out_7551466837254102229[12] = delta_x[11] + nom_x[12];
   out_7551466837254102229[13] = delta_x[12] + nom_x[13];
   out_7551466837254102229[14] = delta_x[13] + nom_x[14];
   out_7551466837254102229[15] = delta_x[14] + nom_x[15];
   out_7551466837254102229[16] = delta_x[15] + nom_x[16];
   out_7551466837254102229[17] = delta_x[16] + nom_x[17];
   out_7551466837254102229[18] = delta_x[17] + nom_x[18];
   out_7551466837254102229[19] = delta_x[18] + nom_x[19];
   out_7551466837254102229[20] = delta_x[19] + nom_x[20];
   out_7551466837254102229[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7083847312756732083) {
   out_7083847312756732083[0] = -nom_x[0] + true_x[0];
   out_7083847312756732083[1] = -nom_x[1] + true_x[1];
   out_7083847312756732083[2] = -nom_x[2] + true_x[2];
   out_7083847312756732083[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7083847312756732083[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7083847312756732083[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7083847312756732083[6] = -nom_x[7] + true_x[7];
   out_7083847312756732083[7] = -nom_x[8] + true_x[8];
   out_7083847312756732083[8] = -nom_x[9] + true_x[9];
   out_7083847312756732083[9] = -nom_x[10] + true_x[10];
   out_7083847312756732083[10] = -nom_x[11] + true_x[11];
   out_7083847312756732083[11] = -nom_x[12] + true_x[12];
   out_7083847312756732083[12] = -nom_x[13] + true_x[13];
   out_7083847312756732083[13] = -nom_x[14] + true_x[14];
   out_7083847312756732083[14] = -nom_x[15] + true_x[15];
   out_7083847312756732083[15] = -nom_x[16] + true_x[16];
   out_7083847312756732083[16] = -nom_x[17] + true_x[17];
   out_7083847312756732083[17] = -nom_x[18] + true_x[18];
   out_7083847312756732083[18] = -nom_x[19] + true_x[19];
   out_7083847312756732083[19] = -nom_x[20] + true_x[20];
   out_7083847312756732083[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2417236276350252613) {
   out_2417236276350252613[0] = 1.0;
   out_2417236276350252613[1] = 0;
   out_2417236276350252613[2] = 0;
   out_2417236276350252613[3] = 0;
   out_2417236276350252613[4] = 0;
   out_2417236276350252613[5] = 0;
   out_2417236276350252613[6] = 0;
   out_2417236276350252613[7] = 0;
   out_2417236276350252613[8] = 0;
   out_2417236276350252613[9] = 0;
   out_2417236276350252613[10] = 0;
   out_2417236276350252613[11] = 0;
   out_2417236276350252613[12] = 0;
   out_2417236276350252613[13] = 0;
   out_2417236276350252613[14] = 0;
   out_2417236276350252613[15] = 0;
   out_2417236276350252613[16] = 0;
   out_2417236276350252613[17] = 0;
   out_2417236276350252613[18] = 0;
   out_2417236276350252613[19] = 0;
   out_2417236276350252613[20] = 0;
   out_2417236276350252613[21] = 0;
   out_2417236276350252613[22] = 1.0;
   out_2417236276350252613[23] = 0;
   out_2417236276350252613[24] = 0;
   out_2417236276350252613[25] = 0;
   out_2417236276350252613[26] = 0;
   out_2417236276350252613[27] = 0;
   out_2417236276350252613[28] = 0;
   out_2417236276350252613[29] = 0;
   out_2417236276350252613[30] = 0;
   out_2417236276350252613[31] = 0;
   out_2417236276350252613[32] = 0;
   out_2417236276350252613[33] = 0;
   out_2417236276350252613[34] = 0;
   out_2417236276350252613[35] = 0;
   out_2417236276350252613[36] = 0;
   out_2417236276350252613[37] = 0;
   out_2417236276350252613[38] = 0;
   out_2417236276350252613[39] = 0;
   out_2417236276350252613[40] = 0;
   out_2417236276350252613[41] = 0;
   out_2417236276350252613[42] = 0;
   out_2417236276350252613[43] = 0;
   out_2417236276350252613[44] = 1.0;
   out_2417236276350252613[45] = 0;
   out_2417236276350252613[46] = 0;
   out_2417236276350252613[47] = 0;
   out_2417236276350252613[48] = 0;
   out_2417236276350252613[49] = 0;
   out_2417236276350252613[50] = 0;
   out_2417236276350252613[51] = 0;
   out_2417236276350252613[52] = 0;
   out_2417236276350252613[53] = 0;
   out_2417236276350252613[54] = 0;
   out_2417236276350252613[55] = 0;
   out_2417236276350252613[56] = 0;
   out_2417236276350252613[57] = 0;
   out_2417236276350252613[58] = 0;
   out_2417236276350252613[59] = 0;
   out_2417236276350252613[60] = 0;
   out_2417236276350252613[61] = 0;
   out_2417236276350252613[62] = 0;
   out_2417236276350252613[63] = 0;
   out_2417236276350252613[64] = 0;
   out_2417236276350252613[65] = 0;
   out_2417236276350252613[66] = -0.5*state[4];
   out_2417236276350252613[67] = -0.5*state[5];
   out_2417236276350252613[68] = -0.5*state[6];
   out_2417236276350252613[69] = 0;
   out_2417236276350252613[70] = 0;
   out_2417236276350252613[71] = 0;
   out_2417236276350252613[72] = 0;
   out_2417236276350252613[73] = 0;
   out_2417236276350252613[74] = 0;
   out_2417236276350252613[75] = 0;
   out_2417236276350252613[76] = 0;
   out_2417236276350252613[77] = 0;
   out_2417236276350252613[78] = 0;
   out_2417236276350252613[79] = 0;
   out_2417236276350252613[80] = 0;
   out_2417236276350252613[81] = 0;
   out_2417236276350252613[82] = 0;
   out_2417236276350252613[83] = 0;
   out_2417236276350252613[84] = 0;
   out_2417236276350252613[85] = 0;
   out_2417236276350252613[86] = 0;
   out_2417236276350252613[87] = 0.5*state[3];
   out_2417236276350252613[88] = 0.5*state[6];
   out_2417236276350252613[89] = -0.5*state[5];
   out_2417236276350252613[90] = 0;
   out_2417236276350252613[91] = 0;
   out_2417236276350252613[92] = 0;
   out_2417236276350252613[93] = 0;
   out_2417236276350252613[94] = 0;
   out_2417236276350252613[95] = 0;
   out_2417236276350252613[96] = 0;
   out_2417236276350252613[97] = 0;
   out_2417236276350252613[98] = 0;
   out_2417236276350252613[99] = 0;
   out_2417236276350252613[100] = 0;
   out_2417236276350252613[101] = 0;
   out_2417236276350252613[102] = 0;
   out_2417236276350252613[103] = 0;
   out_2417236276350252613[104] = 0;
   out_2417236276350252613[105] = 0;
   out_2417236276350252613[106] = 0;
   out_2417236276350252613[107] = 0;
   out_2417236276350252613[108] = -0.5*state[6];
   out_2417236276350252613[109] = 0.5*state[3];
   out_2417236276350252613[110] = 0.5*state[4];
   out_2417236276350252613[111] = 0;
   out_2417236276350252613[112] = 0;
   out_2417236276350252613[113] = 0;
   out_2417236276350252613[114] = 0;
   out_2417236276350252613[115] = 0;
   out_2417236276350252613[116] = 0;
   out_2417236276350252613[117] = 0;
   out_2417236276350252613[118] = 0;
   out_2417236276350252613[119] = 0;
   out_2417236276350252613[120] = 0;
   out_2417236276350252613[121] = 0;
   out_2417236276350252613[122] = 0;
   out_2417236276350252613[123] = 0;
   out_2417236276350252613[124] = 0;
   out_2417236276350252613[125] = 0;
   out_2417236276350252613[126] = 0;
   out_2417236276350252613[127] = 0;
   out_2417236276350252613[128] = 0;
   out_2417236276350252613[129] = 0.5*state[5];
   out_2417236276350252613[130] = -0.5*state[4];
   out_2417236276350252613[131] = 0.5*state[3];
   out_2417236276350252613[132] = 0;
   out_2417236276350252613[133] = 0;
   out_2417236276350252613[134] = 0;
   out_2417236276350252613[135] = 0;
   out_2417236276350252613[136] = 0;
   out_2417236276350252613[137] = 0;
   out_2417236276350252613[138] = 0;
   out_2417236276350252613[139] = 0;
   out_2417236276350252613[140] = 0;
   out_2417236276350252613[141] = 0;
   out_2417236276350252613[142] = 0;
   out_2417236276350252613[143] = 0;
   out_2417236276350252613[144] = 0;
   out_2417236276350252613[145] = 0;
   out_2417236276350252613[146] = 0;
   out_2417236276350252613[147] = 0;
   out_2417236276350252613[148] = 0;
   out_2417236276350252613[149] = 0;
   out_2417236276350252613[150] = 0;
   out_2417236276350252613[151] = 0;
   out_2417236276350252613[152] = 0;
   out_2417236276350252613[153] = 1.0;
   out_2417236276350252613[154] = 0;
   out_2417236276350252613[155] = 0;
   out_2417236276350252613[156] = 0;
   out_2417236276350252613[157] = 0;
   out_2417236276350252613[158] = 0;
   out_2417236276350252613[159] = 0;
   out_2417236276350252613[160] = 0;
   out_2417236276350252613[161] = 0;
   out_2417236276350252613[162] = 0;
   out_2417236276350252613[163] = 0;
   out_2417236276350252613[164] = 0;
   out_2417236276350252613[165] = 0;
   out_2417236276350252613[166] = 0;
   out_2417236276350252613[167] = 0;
   out_2417236276350252613[168] = 0;
   out_2417236276350252613[169] = 0;
   out_2417236276350252613[170] = 0;
   out_2417236276350252613[171] = 0;
   out_2417236276350252613[172] = 0;
   out_2417236276350252613[173] = 0;
   out_2417236276350252613[174] = 0;
   out_2417236276350252613[175] = 1.0;
   out_2417236276350252613[176] = 0;
   out_2417236276350252613[177] = 0;
   out_2417236276350252613[178] = 0;
   out_2417236276350252613[179] = 0;
   out_2417236276350252613[180] = 0;
   out_2417236276350252613[181] = 0;
   out_2417236276350252613[182] = 0;
   out_2417236276350252613[183] = 0;
   out_2417236276350252613[184] = 0;
   out_2417236276350252613[185] = 0;
   out_2417236276350252613[186] = 0;
   out_2417236276350252613[187] = 0;
   out_2417236276350252613[188] = 0;
   out_2417236276350252613[189] = 0;
   out_2417236276350252613[190] = 0;
   out_2417236276350252613[191] = 0;
   out_2417236276350252613[192] = 0;
   out_2417236276350252613[193] = 0;
   out_2417236276350252613[194] = 0;
   out_2417236276350252613[195] = 0;
   out_2417236276350252613[196] = 0;
   out_2417236276350252613[197] = 1.0;
   out_2417236276350252613[198] = 0;
   out_2417236276350252613[199] = 0;
   out_2417236276350252613[200] = 0;
   out_2417236276350252613[201] = 0;
   out_2417236276350252613[202] = 0;
   out_2417236276350252613[203] = 0;
   out_2417236276350252613[204] = 0;
   out_2417236276350252613[205] = 0;
   out_2417236276350252613[206] = 0;
   out_2417236276350252613[207] = 0;
   out_2417236276350252613[208] = 0;
   out_2417236276350252613[209] = 0;
   out_2417236276350252613[210] = 0;
   out_2417236276350252613[211] = 0;
   out_2417236276350252613[212] = 0;
   out_2417236276350252613[213] = 0;
   out_2417236276350252613[214] = 0;
   out_2417236276350252613[215] = 0;
   out_2417236276350252613[216] = 0;
   out_2417236276350252613[217] = 0;
   out_2417236276350252613[218] = 0;
   out_2417236276350252613[219] = 1.0;
   out_2417236276350252613[220] = 0;
   out_2417236276350252613[221] = 0;
   out_2417236276350252613[222] = 0;
   out_2417236276350252613[223] = 0;
   out_2417236276350252613[224] = 0;
   out_2417236276350252613[225] = 0;
   out_2417236276350252613[226] = 0;
   out_2417236276350252613[227] = 0;
   out_2417236276350252613[228] = 0;
   out_2417236276350252613[229] = 0;
   out_2417236276350252613[230] = 0;
   out_2417236276350252613[231] = 0;
   out_2417236276350252613[232] = 0;
   out_2417236276350252613[233] = 0;
   out_2417236276350252613[234] = 0;
   out_2417236276350252613[235] = 0;
   out_2417236276350252613[236] = 0;
   out_2417236276350252613[237] = 0;
   out_2417236276350252613[238] = 0;
   out_2417236276350252613[239] = 0;
   out_2417236276350252613[240] = 0;
   out_2417236276350252613[241] = 1.0;
   out_2417236276350252613[242] = 0;
   out_2417236276350252613[243] = 0;
   out_2417236276350252613[244] = 0;
   out_2417236276350252613[245] = 0;
   out_2417236276350252613[246] = 0;
   out_2417236276350252613[247] = 0;
   out_2417236276350252613[248] = 0;
   out_2417236276350252613[249] = 0;
   out_2417236276350252613[250] = 0;
   out_2417236276350252613[251] = 0;
   out_2417236276350252613[252] = 0;
   out_2417236276350252613[253] = 0;
   out_2417236276350252613[254] = 0;
   out_2417236276350252613[255] = 0;
   out_2417236276350252613[256] = 0;
   out_2417236276350252613[257] = 0;
   out_2417236276350252613[258] = 0;
   out_2417236276350252613[259] = 0;
   out_2417236276350252613[260] = 0;
   out_2417236276350252613[261] = 0;
   out_2417236276350252613[262] = 0;
   out_2417236276350252613[263] = 1.0;
   out_2417236276350252613[264] = 0;
   out_2417236276350252613[265] = 0;
   out_2417236276350252613[266] = 0;
   out_2417236276350252613[267] = 0;
   out_2417236276350252613[268] = 0;
   out_2417236276350252613[269] = 0;
   out_2417236276350252613[270] = 0;
   out_2417236276350252613[271] = 0;
   out_2417236276350252613[272] = 0;
   out_2417236276350252613[273] = 0;
   out_2417236276350252613[274] = 0;
   out_2417236276350252613[275] = 0;
   out_2417236276350252613[276] = 0;
   out_2417236276350252613[277] = 0;
   out_2417236276350252613[278] = 0;
   out_2417236276350252613[279] = 0;
   out_2417236276350252613[280] = 0;
   out_2417236276350252613[281] = 0;
   out_2417236276350252613[282] = 0;
   out_2417236276350252613[283] = 0;
   out_2417236276350252613[284] = 0;
   out_2417236276350252613[285] = 1.0;
   out_2417236276350252613[286] = 0;
   out_2417236276350252613[287] = 0;
   out_2417236276350252613[288] = 0;
   out_2417236276350252613[289] = 0;
   out_2417236276350252613[290] = 0;
   out_2417236276350252613[291] = 0;
   out_2417236276350252613[292] = 0;
   out_2417236276350252613[293] = 0;
   out_2417236276350252613[294] = 0;
   out_2417236276350252613[295] = 0;
   out_2417236276350252613[296] = 0;
   out_2417236276350252613[297] = 0;
   out_2417236276350252613[298] = 0;
   out_2417236276350252613[299] = 0;
   out_2417236276350252613[300] = 0;
   out_2417236276350252613[301] = 0;
   out_2417236276350252613[302] = 0;
   out_2417236276350252613[303] = 0;
   out_2417236276350252613[304] = 0;
   out_2417236276350252613[305] = 0;
   out_2417236276350252613[306] = 0;
   out_2417236276350252613[307] = 1.0;
   out_2417236276350252613[308] = 0;
   out_2417236276350252613[309] = 0;
   out_2417236276350252613[310] = 0;
   out_2417236276350252613[311] = 0;
   out_2417236276350252613[312] = 0;
   out_2417236276350252613[313] = 0;
   out_2417236276350252613[314] = 0;
   out_2417236276350252613[315] = 0;
   out_2417236276350252613[316] = 0;
   out_2417236276350252613[317] = 0;
   out_2417236276350252613[318] = 0;
   out_2417236276350252613[319] = 0;
   out_2417236276350252613[320] = 0;
   out_2417236276350252613[321] = 0;
   out_2417236276350252613[322] = 0;
   out_2417236276350252613[323] = 0;
   out_2417236276350252613[324] = 0;
   out_2417236276350252613[325] = 0;
   out_2417236276350252613[326] = 0;
   out_2417236276350252613[327] = 0;
   out_2417236276350252613[328] = 0;
   out_2417236276350252613[329] = 1.0;
   out_2417236276350252613[330] = 0;
   out_2417236276350252613[331] = 0;
   out_2417236276350252613[332] = 0;
   out_2417236276350252613[333] = 0;
   out_2417236276350252613[334] = 0;
   out_2417236276350252613[335] = 0;
   out_2417236276350252613[336] = 0;
   out_2417236276350252613[337] = 0;
   out_2417236276350252613[338] = 0;
   out_2417236276350252613[339] = 0;
   out_2417236276350252613[340] = 0;
   out_2417236276350252613[341] = 0;
   out_2417236276350252613[342] = 0;
   out_2417236276350252613[343] = 0;
   out_2417236276350252613[344] = 0;
   out_2417236276350252613[345] = 0;
   out_2417236276350252613[346] = 0;
   out_2417236276350252613[347] = 0;
   out_2417236276350252613[348] = 0;
   out_2417236276350252613[349] = 0;
   out_2417236276350252613[350] = 0;
   out_2417236276350252613[351] = 1.0;
   out_2417236276350252613[352] = 0;
   out_2417236276350252613[353] = 0;
   out_2417236276350252613[354] = 0;
   out_2417236276350252613[355] = 0;
   out_2417236276350252613[356] = 0;
   out_2417236276350252613[357] = 0;
   out_2417236276350252613[358] = 0;
   out_2417236276350252613[359] = 0;
   out_2417236276350252613[360] = 0;
   out_2417236276350252613[361] = 0;
   out_2417236276350252613[362] = 0;
   out_2417236276350252613[363] = 0;
   out_2417236276350252613[364] = 0;
   out_2417236276350252613[365] = 0;
   out_2417236276350252613[366] = 0;
   out_2417236276350252613[367] = 0;
   out_2417236276350252613[368] = 0;
   out_2417236276350252613[369] = 0;
   out_2417236276350252613[370] = 0;
   out_2417236276350252613[371] = 0;
   out_2417236276350252613[372] = 0;
   out_2417236276350252613[373] = 1.0;
   out_2417236276350252613[374] = 0;
   out_2417236276350252613[375] = 0;
   out_2417236276350252613[376] = 0;
   out_2417236276350252613[377] = 0;
   out_2417236276350252613[378] = 0;
   out_2417236276350252613[379] = 0;
   out_2417236276350252613[380] = 0;
   out_2417236276350252613[381] = 0;
   out_2417236276350252613[382] = 0;
   out_2417236276350252613[383] = 0;
   out_2417236276350252613[384] = 0;
   out_2417236276350252613[385] = 0;
   out_2417236276350252613[386] = 0;
   out_2417236276350252613[387] = 0;
   out_2417236276350252613[388] = 0;
   out_2417236276350252613[389] = 0;
   out_2417236276350252613[390] = 0;
   out_2417236276350252613[391] = 0;
   out_2417236276350252613[392] = 0;
   out_2417236276350252613[393] = 0;
   out_2417236276350252613[394] = 0;
   out_2417236276350252613[395] = 1.0;
   out_2417236276350252613[396] = 0;
   out_2417236276350252613[397] = 0;
   out_2417236276350252613[398] = 0;
   out_2417236276350252613[399] = 0;
   out_2417236276350252613[400] = 0;
   out_2417236276350252613[401] = 0;
   out_2417236276350252613[402] = 0;
   out_2417236276350252613[403] = 0;
   out_2417236276350252613[404] = 0;
   out_2417236276350252613[405] = 0;
   out_2417236276350252613[406] = 0;
   out_2417236276350252613[407] = 0;
   out_2417236276350252613[408] = 0;
   out_2417236276350252613[409] = 0;
   out_2417236276350252613[410] = 0;
   out_2417236276350252613[411] = 0;
   out_2417236276350252613[412] = 0;
   out_2417236276350252613[413] = 0;
   out_2417236276350252613[414] = 0;
   out_2417236276350252613[415] = 0;
   out_2417236276350252613[416] = 0;
   out_2417236276350252613[417] = 1.0;
   out_2417236276350252613[418] = 0;
   out_2417236276350252613[419] = 0;
   out_2417236276350252613[420] = 0;
   out_2417236276350252613[421] = 0;
   out_2417236276350252613[422] = 0;
   out_2417236276350252613[423] = 0;
   out_2417236276350252613[424] = 0;
   out_2417236276350252613[425] = 0;
   out_2417236276350252613[426] = 0;
   out_2417236276350252613[427] = 0;
   out_2417236276350252613[428] = 0;
   out_2417236276350252613[429] = 0;
   out_2417236276350252613[430] = 0;
   out_2417236276350252613[431] = 0;
   out_2417236276350252613[432] = 0;
   out_2417236276350252613[433] = 0;
   out_2417236276350252613[434] = 0;
   out_2417236276350252613[435] = 0;
   out_2417236276350252613[436] = 0;
   out_2417236276350252613[437] = 0;
   out_2417236276350252613[438] = 0;
   out_2417236276350252613[439] = 1.0;
   out_2417236276350252613[440] = 0;
   out_2417236276350252613[441] = 0;
   out_2417236276350252613[442] = 0;
   out_2417236276350252613[443] = 0;
   out_2417236276350252613[444] = 0;
   out_2417236276350252613[445] = 0;
   out_2417236276350252613[446] = 0;
   out_2417236276350252613[447] = 0;
   out_2417236276350252613[448] = 0;
   out_2417236276350252613[449] = 0;
   out_2417236276350252613[450] = 0;
   out_2417236276350252613[451] = 0;
   out_2417236276350252613[452] = 0;
   out_2417236276350252613[453] = 0;
   out_2417236276350252613[454] = 0;
   out_2417236276350252613[455] = 0;
   out_2417236276350252613[456] = 0;
   out_2417236276350252613[457] = 0;
   out_2417236276350252613[458] = 0;
   out_2417236276350252613[459] = 0;
   out_2417236276350252613[460] = 0;
   out_2417236276350252613[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6846072783341992679) {
   out_6846072783341992679[0] = dt*state[7] + state[0];
   out_6846072783341992679[1] = dt*state[8] + state[1];
   out_6846072783341992679[2] = dt*state[9] + state[2];
   out_6846072783341992679[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6846072783341992679[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6846072783341992679[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6846072783341992679[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6846072783341992679[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6846072783341992679[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6846072783341992679[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6846072783341992679[10] = state[10];
   out_6846072783341992679[11] = state[11];
   out_6846072783341992679[12] = state[12];
   out_6846072783341992679[13] = state[13];
   out_6846072783341992679[14] = state[14];
   out_6846072783341992679[15] = state[15];
   out_6846072783341992679[16] = state[16];
   out_6846072783341992679[17] = state[17];
   out_6846072783341992679[18] = state[18];
   out_6846072783341992679[19] = state[19];
   out_6846072783341992679[20] = state[20];
   out_6846072783341992679[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7610157667537165676) {
   out_7610157667537165676[0] = 1;
   out_7610157667537165676[1] = 0;
   out_7610157667537165676[2] = 0;
   out_7610157667537165676[3] = 0;
   out_7610157667537165676[4] = 0;
   out_7610157667537165676[5] = 0;
   out_7610157667537165676[6] = dt;
   out_7610157667537165676[7] = 0;
   out_7610157667537165676[8] = 0;
   out_7610157667537165676[9] = 0;
   out_7610157667537165676[10] = 0;
   out_7610157667537165676[11] = 0;
   out_7610157667537165676[12] = 0;
   out_7610157667537165676[13] = 0;
   out_7610157667537165676[14] = 0;
   out_7610157667537165676[15] = 0;
   out_7610157667537165676[16] = 0;
   out_7610157667537165676[17] = 0;
   out_7610157667537165676[18] = 0;
   out_7610157667537165676[19] = 0;
   out_7610157667537165676[20] = 0;
   out_7610157667537165676[21] = 0;
   out_7610157667537165676[22] = 1;
   out_7610157667537165676[23] = 0;
   out_7610157667537165676[24] = 0;
   out_7610157667537165676[25] = 0;
   out_7610157667537165676[26] = 0;
   out_7610157667537165676[27] = 0;
   out_7610157667537165676[28] = dt;
   out_7610157667537165676[29] = 0;
   out_7610157667537165676[30] = 0;
   out_7610157667537165676[31] = 0;
   out_7610157667537165676[32] = 0;
   out_7610157667537165676[33] = 0;
   out_7610157667537165676[34] = 0;
   out_7610157667537165676[35] = 0;
   out_7610157667537165676[36] = 0;
   out_7610157667537165676[37] = 0;
   out_7610157667537165676[38] = 0;
   out_7610157667537165676[39] = 0;
   out_7610157667537165676[40] = 0;
   out_7610157667537165676[41] = 0;
   out_7610157667537165676[42] = 0;
   out_7610157667537165676[43] = 0;
   out_7610157667537165676[44] = 1;
   out_7610157667537165676[45] = 0;
   out_7610157667537165676[46] = 0;
   out_7610157667537165676[47] = 0;
   out_7610157667537165676[48] = 0;
   out_7610157667537165676[49] = 0;
   out_7610157667537165676[50] = dt;
   out_7610157667537165676[51] = 0;
   out_7610157667537165676[52] = 0;
   out_7610157667537165676[53] = 0;
   out_7610157667537165676[54] = 0;
   out_7610157667537165676[55] = 0;
   out_7610157667537165676[56] = 0;
   out_7610157667537165676[57] = 0;
   out_7610157667537165676[58] = 0;
   out_7610157667537165676[59] = 0;
   out_7610157667537165676[60] = 0;
   out_7610157667537165676[61] = 0;
   out_7610157667537165676[62] = 0;
   out_7610157667537165676[63] = 0;
   out_7610157667537165676[64] = 0;
   out_7610157667537165676[65] = 0;
   out_7610157667537165676[66] = 1;
   out_7610157667537165676[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7610157667537165676[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7610157667537165676[69] = 0;
   out_7610157667537165676[70] = 0;
   out_7610157667537165676[71] = 0;
   out_7610157667537165676[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7610157667537165676[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7610157667537165676[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7610157667537165676[75] = 0;
   out_7610157667537165676[76] = 0;
   out_7610157667537165676[77] = 0;
   out_7610157667537165676[78] = 0;
   out_7610157667537165676[79] = 0;
   out_7610157667537165676[80] = 0;
   out_7610157667537165676[81] = 0;
   out_7610157667537165676[82] = 0;
   out_7610157667537165676[83] = 0;
   out_7610157667537165676[84] = 0;
   out_7610157667537165676[85] = 0;
   out_7610157667537165676[86] = 0;
   out_7610157667537165676[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7610157667537165676[88] = 1;
   out_7610157667537165676[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7610157667537165676[90] = 0;
   out_7610157667537165676[91] = 0;
   out_7610157667537165676[92] = 0;
   out_7610157667537165676[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7610157667537165676[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7610157667537165676[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7610157667537165676[96] = 0;
   out_7610157667537165676[97] = 0;
   out_7610157667537165676[98] = 0;
   out_7610157667537165676[99] = 0;
   out_7610157667537165676[100] = 0;
   out_7610157667537165676[101] = 0;
   out_7610157667537165676[102] = 0;
   out_7610157667537165676[103] = 0;
   out_7610157667537165676[104] = 0;
   out_7610157667537165676[105] = 0;
   out_7610157667537165676[106] = 0;
   out_7610157667537165676[107] = 0;
   out_7610157667537165676[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7610157667537165676[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7610157667537165676[110] = 1;
   out_7610157667537165676[111] = 0;
   out_7610157667537165676[112] = 0;
   out_7610157667537165676[113] = 0;
   out_7610157667537165676[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7610157667537165676[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7610157667537165676[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7610157667537165676[117] = 0;
   out_7610157667537165676[118] = 0;
   out_7610157667537165676[119] = 0;
   out_7610157667537165676[120] = 0;
   out_7610157667537165676[121] = 0;
   out_7610157667537165676[122] = 0;
   out_7610157667537165676[123] = 0;
   out_7610157667537165676[124] = 0;
   out_7610157667537165676[125] = 0;
   out_7610157667537165676[126] = 0;
   out_7610157667537165676[127] = 0;
   out_7610157667537165676[128] = 0;
   out_7610157667537165676[129] = 0;
   out_7610157667537165676[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7610157667537165676[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7610157667537165676[132] = 1;
   out_7610157667537165676[133] = 0;
   out_7610157667537165676[134] = 0;
   out_7610157667537165676[135] = 0;
   out_7610157667537165676[136] = 0;
   out_7610157667537165676[137] = 0;
   out_7610157667537165676[138] = 0;
   out_7610157667537165676[139] = 0;
   out_7610157667537165676[140] = 0;
   out_7610157667537165676[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7610157667537165676[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7610157667537165676[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7610157667537165676[144] = 0;
   out_7610157667537165676[145] = 0;
   out_7610157667537165676[146] = 0;
   out_7610157667537165676[147] = 0;
   out_7610157667537165676[148] = 0;
   out_7610157667537165676[149] = 0;
   out_7610157667537165676[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7610157667537165676[151] = 0;
   out_7610157667537165676[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7610157667537165676[153] = 0;
   out_7610157667537165676[154] = 1;
   out_7610157667537165676[155] = 0;
   out_7610157667537165676[156] = 0;
   out_7610157667537165676[157] = 0;
   out_7610157667537165676[158] = 0;
   out_7610157667537165676[159] = 0;
   out_7610157667537165676[160] = 0;
   out_7610157667537165676[161] = 0;
   out_7610157667537165676[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7610157667537165676[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7610157667537165676[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7610157667537165676[165] = 0;
   out_7610157667537165676[166] = 0;
   out_7610157667537165676[167] = 0;
   out_7610157667537165676[168] = 0;
   out_7610157667537165676[169] = 0;
   out_7610157667537165676[170] = 0;
   out_7610157667537165676[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7610157667537165676[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7610157667537165676[173] = 0;
   out_7610157667537165676[174] = 0;
   out_7610157667537165676[175] = 0;
   out_7610157667537165676[176] = 1;
   out_7610157667537165676[177] = 0;
   out_7610157667537165676[178] = 0;
   out_7610157667537165676[179] = 0;
   out_7610157667537165676[180] = 0;
   out_7610157667537165676[181] = 0;
   out_7610157667537165676[182] = 0;
   out_7610157667537165676[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7610157667537165676[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7610157667537165676[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7610157667537165676[186] = 0;
   out_7610157667537165676[187] = 0;
   out_7610157667537165676[188] = 0;
   out_7610157667537165676[189] = 0;
   out_7610157667537165676[190] = 0;
   out_7610157667537165676[191] = 0;
   out_7610157667537165676[192] = 0;
   out_7610157667537165676[193] = 0;
   out_7610157667537165676[194] = 0;
   out_7610157667537165676[195] = 0;
   out_7610157667537165676[196] = 0;
   out_7610157667537165676[197] = 0;
   out_7610157667537165676[198] = 1;
   out_7610157667537165676[199] = 0;
   out_7610157667537165676[200] = 0;
   out_7610157667537165676[201] = 0;
   out_7610157667537165676[202] = 0;
   out_7610157667537165676[203] = 0;
   out_7610157667537165676[204] = 0;
   out_7610157667537165676[205] = 0;
   out_7610157667537165676[206] = 0;
   out_7610157667537165676[207] = 0;
   out_7610157667537165676[208] = 0;
   out_7610157667537165676[209] = 0;
   out_7610157667537165676[210] = 0;
   out_7610157667537165676[211] = 0;
   out_7610157667537165676[212] = 0;
   out_7610157667537165676[213] = 0;
   out_7610157667537165676[214] = 0;
   out_7610157667537165676[215] = 0;
   out_7610157667537165676[216] = 0;
   out_7610157667537165676[217] = 0;
   out_7610157667537165676[218] = 0;
   out_7610157667537165676[219] = 0;
   out_7610157667537165676[220] = 1;
   out_7610157667537165676[221] = 0;
   out_7610157667537165676[222] = 0;
   out_7610157667537165676[223] = 0;
   out_7610157667537165676[224] = 0;
   out_7610157667537165676[225] = 0;
   out_7610157667537165676[226] = 0;
   out_7610157667537165676[227] = 0;
   out_7610157667537165676[228] = 0;
   out_7610157667537165676[229] = 0;
   out_7610157667537165676[230] = 0;
   out_7610157667537165676[231] = 0;
   out_7610157667537165676[232] = 0;
   out_7610157667537165676[233] = 0;
   out_7610157667537165676[234] = 0;
   out_7610157667537165676[235] = 0;
   out_7610157667537165676[236] = 0;
   out_7610157667537165676[237] = 0;
   out_7610157667537165676[238] = 0;
   out_7610157667537165676[239] = 0;
   out_7610157667537165676[240] = 0;
   out_7610157667537165676[241] = 0;
   out_7610157667537165676[242] = 1;
   out_7610157667537165676[243] = 0;
   out_7610157667537165676[244] = 0;
   out_7610157667537165676[245] = 0;
   out_7610157667537165676[246] = 0;
   out_7610157667537165676[247] = 0;
   out_7610157667537165676[248] = 0;
   out_7610157667537165676[249] = 0;
   out_7610157667537165676[250] = 0;
   out_7610157667537165676[251] = 0;
   out_7610157667537165676[252] = 0;
   out_7610157667537165676[253] = 0;
   out_7610157667537165676[254] = 0;
   out_7610157667537165676[255] = 0;
   out_7610157667537165676[256] = 0;
   out_7610157667537165676[257] = 0;
   out_7610157667537165676[258] = 0;
   out_7610157667537165676[259] = 0;
   out_7610157667537165676[260] = 0;
   out_7610157667537165676[261] = 0;
   out_7610157667537165676[262] = 0;
   out_7610157667537165676[263] = 0;
   out_7610157667537165676[264] = 1;
   out_7610157667537165676[265] = 0;
   out_7610157667537165676[266] = 0;
   out_7610157667537165676[267] = 0;
   out_7610157667537165676[268] = 0;
   out_7610157667537165676[269] = 0;
   out_7610157667537165676[270] = 0;
   out_7610157667537165676[271] = 0;
   out_7610157667537165676[272] = 0;
   out_7610157667537165676[273] = 0;
   out_7610157667537165676[274] = 0;
   out_7610157667537165676[275] = 0;
   out_7610157667537165676[276] = 0;
   out_7610157667537165676[277] = 0;
   out_7610157667537165676[278] = 0;
   out_7610157667537165676[279] = 0;
   out_7610157667537165676[280] = 0;
   out_7610157667537165676[281] = 0;
   out_7610157667537165676[282] = 0;
   out_7610157667537165676[283] = 0;
   out_7610157667537165676[284] = 0;
   out_7610157667537165676[285] = 0;
   out_7610157667537165676[286] = 1;
   out_7610157667537165676[287] = 0;
   out_7610157667537165676[288] = 0;
   out_7610157667537165676[289] = 0;
   out_7610157667537165676[290] = 0;
   out_7610157667537165676[291] = 0;
   out_7610157667537165676[292] = 0;
   out_7610157667537165676[293] = 0;
   out_7610157667537165676[294] = 0;
   out_7610157667537165676[295] = 0;
   out_7610157667537165676[296] = 0;
   out_7610157667537165676[297] = 0;
   out_7610157667537165676[298] = 0;
   out_7610157667537165676[299] = 0;
   out_7610157667537165676[300] = 0;
   out_7610157667537165676[301] = 0;
   out_7610157667537165676[302] = 0;
   out_7610157667537165676[303] = 0;
   out_7610157667537165676[304] = 0;
   out_7610157667537165676[305] = 0;
   out_7610157667537165676[306] = 0;
   out_7610157667537165676[307] = 0;
   out_7610157667537165676[308] = 1;
   out_7610157667537165676[309] = 0;
   out_7610157667537165676[310] = 0;
   out_7610157667537165676[311] = 0;
   out_7610157667537165676[312] = 0;
   out_7610157667537165676[313] = 0;
   out_7610157667537165676[314] = 0;
   out_7610157667537165676[315] = 0;
   out_7610157667537165676[316] = 0;
   out_7610157667537165676[317] = 0;
   out_7610157667537165676[318] = 0;
   out_7610157667537165676[319] = 0;
   out_7610157667537165676[320] = 0;
   out_7610157667537165676[321] = 0;
   out_7610157667537165676[322] = 0;
   out_7610157667537165676[323] = 0;
   out_7610157667537165676[324] = 0;
   out_7610157667537165676[325] = 0;
   out_7610157667537165676[326] = 0;
   out_7610157667537165676[327] = 0;
   out_7610157667537165676[328] = 0;
   out_7610157667537165676[329] = 0;
   out_7610157667537165676[330] = 1;
   out_7610157667537165676[331] = 0;
   out_7610157667537165676[332] = 0;
   out_7610157667537165676[333] = 0;
   out_7610157667537165676[334] = 0;
   out_7610157667537165676[335] = 0;
   out_7610157667537165676[336] = 0;
   out_7610157667537165676[337] = 0;
   out_7610157667537165676[338] = 0;
   out_7610157667537165676[339] = 0;
   out_7610157667537165676[340] = 0;
   out_7610157667537165676[341] = 0;
   out_7610157667537165676[342] = 0;
   out_7610157667537165676[343] = 0;
   out_7610157667537165676[344] = 0;
   out_7610157667537165676[345] = 0;
   out_7610157667537165676[346] = 0;
   out_7610157667537165676[347] = 0;
   out_7610157667537165676[348] = 0;
   out_7610157667537165676[349] = 0;
   out_7610157667537165676[350] = 0;
   out_7610157667537165676[351] = 0;
   out_7610157667537165676[352] = 1;
   out_7610157667537165676[353] = 0;
   out_7610157667537165676[354] = 0;
   out_7610157667537165676[355] = 0;
   out_7610157667537165676[356] = 0;
   out_7610157667537165676[357] = 0;
   out_7610157667537165676[358] = 0;
   out_7610157667537165676[359] = 0;
   out_7610157667537165676[360] = 0;
   out_7610157667537165676[361] = 0;
   out_7610157667537165676[362] = 0;
   out_7610157667537165676[363] = 0;
   out_7610157667537165676[364] = 0;
   out_7610157667537165676[365] = 0;
   out_7610157667537165676[366] = 0;
   out_7610157667537165676[367] = 0;
   out_7610157667537165676[368] = 0;
   out_7610157667537165676[369] = 0;
   out_7610157667537165676[370] = 0;
   out_7610157667537165676[371] = 0;
   out_7610157667537165676[372] = 0;
   out_7610157667537165676[373] = 0;
   out_7610157667537165676[374] = 1;
   out_7610157667537165676[375] = 0;
   out_7610157667537165676[376] = 0;
   out_7610157667537165676[377] = 0;
   out_7610157667537165676[378] = 0;
   out_7610157667537165676[379] = 0;
   out_7610157667537165676[380] = 0;
   out_7610157667537165676[381] = 0;
   out_7610157667537165676[382] = 0;
   out_7610157667537165676[383] = 0;
   out_7610157667537165676[384] = 0;
   out_7610157667537165676[385] = 0;
   out_7610157667537165676[386] = 0;
   out_7610157667537165676[387] = 0;
   out_7610157667537165676[388] = 0;
   out_7610157667537165676[389] = 0;
   out_7610157667537165676[390] = 0;
   out_7610157667537165676[391] = 0;
   out_7610157667537165676[392] = 0;
   out_7610157667537165676[393] = 0;
   out_7610157667537165676[394] = 0;
   out_7610157667537165676[395] = 0;
   out_7610157667537165676[396] = 1;
   out_7610157667537165676[397] = 0;
   out_7610157667537165676[398] = 0;
   out_7610157667537165676[399] = 0;
   out_7610157667537165676[400] = 0;
   out_7610157667537165676[401] = 0;
   out_7610157667537165676[402] = 0;
   out_7610157667537165676[403] = 0;
   out_7610157667537165676[404] = 0;
   out_7610157667537165676[405] = 0;
   out_7610157667537165676[406] = 0;
   out_7610157667537165676[407] = 0;
   out_7610157667537165676[408] = 0;
   out_7610157667537165676[409] = 0;
   out_7610157667537165676[410] = 0;
   out_7610157667537165676[411] = 0;
   out_7610157667537165676[412] = 0;
   out_7610157667537165676[413] = 0;
   out_7610157667537165676[414] = 0;
   out_7610157667537165676[415] = 0;
   out_7610157667537165676[416] = 0;
   out_7610157667537165676[417] = 0;
   out_7610157667537165676[418] = 1;
   out_7610157667537165676[419] = 0;
   out_7610157667537165676[420] = 0;
   out_7610157667537165676[421] = 0;
   out_7610157667537165676[422] = 0;
   out_7610157667537165676[423] = 0;
   out_7610157667537165676[424] = 0;
   out_7610157667537165676[425] = 0;
   out_7610157667537165676[426] = 0;
   out_7610157667537165676[427] = 0;
   out_7610157667537165676[428] = 0;
   out_7610157667537165676[429] = 0;
   out_7610157667537165676[430] = 0;
   out_7610157667537165676[431] = 0;
   out_7610157667537165676[432] = 0;
   out_7610157667537165676[433] = 0;
   out_7610157667537165676[434] = 0;
   out_7610157667537165676[435] = 0;
   out_7610157667537165676[436] = 0;
   out_7610157667537165676[437] = 0;
   out_7610157667537165676[438] = 0;
   out_7610157667537165676[439] = 0;
   out_7610157667537165676[440] = 1;
}
void h_4(double *state, double *unused, double *out_6522284497954344691) {
   out_6522284497954344691[0] = state[10] + state[13];
   out_6522284497954344691[1] = state[11] + state[14];
   out_6522284497954344691[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_9221396043523342834) {
   out_9221396043523342834[0] = 0;
   out_9221396043523342834[1] = 0;
   out_9221396043523342834[2] = 0;
   out_9221396043523342834[3] = 0;
   out_9221396043523342834[4] = 0;
   out_9221396043523342834[5] = 0;
   out_9221396043523342834[6] = 0;
   out_9221396043523342834[7] = 0;
   out_9221396043523342834[8] = 0;
   out_9221396043523342834[9] = 0;
   out_9221396043523342834[10] = 1;
   out_9221396043523342834[11] = 0;
   out_9221396043523342834[12] = 0;
   out_9221396043523342834[13] = 1;
   out_9221396043523342834[14] = 0;
   out_9221396043523342834[15] = 0;
   out_9221396043523342834[16] = 0;
   out_9221396043523342834[17] = 0;
   out_9221396043523342834[18] = 0;
   out_9221396043523342834[19] = 0;
   out_9221396043523342834[20] = 0;
   out_9221396043523342834[21] = 0;
   out_9221396043523342834[22] = 0;
   out_9221396043523342834[23] = 0;
   out_9221396043523342834[24] = 0;
   out_9221396043523342834[25] = 0;
   out_9221396043523342834[26] = 0;
   out_9221396043523342834[27] = 0;
   out_9221396043523342834[28] = 0;
   out_9221396043523342834[29] = 0;
   out_9221396043523342834[30] = 0;
   out_9221396043523342834[31] = 0;
   out_9221396043523342834[32] = 0;
   out_9221396043523342834[33] = 1;
   out_9221396043523342834[34] = 0;
   out_9221396043523342834[35] = 0;
   out_9221396043523342834[36] = 1;
   out_9221396043523342834[37] = 0;
   out_9221396043523342834[38] = 0;
   out_9221396043523342834[39] = 0;
   out_9221396043523342834[40] = 0;
   out_9221396043523342834[41] = 0;
   out_9221396043523342834[42] = 0;
   out_9221396043523342834[43] = 0;
   out_9221396043523342834[44] = 0;
   out_9221396043523342834[45] = 0;
   out_9221396043523342834[46] = 0;
   out_9221396043523342834[47] = 0;
   out_9221396043523342834[48] = 0;
   out_9221396043523342834[49] = 0;
   out_9221396043523342834[50] = 0;
   out_9221396043523342834[51] = 0;
   out_9221396043523342834[52] = 0;
   out_9221396043523342834[53] = 0;
   out_9221396043523342834[54] = 0;
   out_9221396043523342834[55] = 0;
   out_9221396043523342834[56] = 1;
   out_9221396043523342834[57] = 0;
   out_9221396043523342834[58] = 0;
   out_9221396043523342834[59] = 1;
   out_9221396043523342834[60] = 0;
   out_9221396043523342834[61] = 0;
   out_9221396043523342834[62] = 0;
   out_9221396043523342834[63] = 0;
   out_9221396043523342834[64] = 0;
   out_9221396043523342834[65] = 0;
}
void h_9(double *state, double *unused, double *out_31636738801653628) {
   out_31636738801653628[0] = state[10];
   out_31636738801653628[1] = state[11];
   out_31636738801653628[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8984158383556618137) {
   out_8984158383556618137[0] = 0;
   out_8984158383556618137[1] = 0;
   out_8984158383556618137[2] = 0;
   out_8984158383556618137[3] = 0;
   out_8984158383556618137[4] = 0;
   out_8984158383556618137[5] = 0;
   out_8984158383556618137[6] = 0;
   out_8984158383556618137[7] = 0;
   out_8984158383556618137[8] = 0;
   out_8984158383556618137[9] = 0;
   out_8984158383556618137[10] = 1;
   out_8984158383556618137[11] = 0;
   out_8984158383556618137[12] = 0;
   out_8984158383556618137[13] = 0;
   out_8984158383556618137[14] = 0;
   out_8984158383556618137[15] = 0;
   out_8984158383556618137[16] = 0;
   out_8984158383556618137[17] = 0;
   out_8984158383556618137[18] = 0;
   out_8984158383556618137[19] = 0;
   out_8984158383556618137[20] = 0;
   out_8984158383556618137[21] = 0;
   out_8984158383556618137[22] = 0;
   out_8984158383556618137[23] = 0;
   out_8984158383556618137[24] = 0;
   out_8984158383556618137[25] = 0;
   out_8984158383556618137[26] = 0;
   out_8984158383556618137[27] = 0;
   out_8984158383556618137[28] = 0;
   out_8984158383556618137[29] = 0;
   out_8984158383556618137[30] = 0;
   out_8984158383556618137[31] = 0;
   out_8984158383556618137[32] = 0;
   out_8984158383556618137[33] = 1;
   out_8984158383556618137[34] = 0;
   out_8984158383556618137[35] = 0;
   out_8984158383556618137[36] = 0;
   out_8984158383556618137[37] = 0;
   out_8984158383556618137[38] = 0;
   out_8984158383556618137[39] = 0;
   out_8984158383556618137[40] = 0;
   out_8984158383556618137[41] = 0;
   out_8984158383556618137[42] = 0;
   out_8984158383556618137[43] = 0;
   out_8984158383556618137[44] = 0;
   out_8984158383556618137[45] = 0;
   out_8984158383556618137[46] = 0;
   out_8984158383556618137[47] = 0;
   out_8984158383556618137[48] = 0;
   out_8984158383556618137[49] = 0;
   out_8984158383556618137[50] = 0;
   out_8984158383556618137[51] = 0;
   out_8984158383556618137[52] = 0;
   out_8984158383556618137[53] = 0;
   out_8984158383556618137[54] = 0;
   out_8984158383556618137[55] = 0;
   out_8984158383556618137[56] = 1;
   out_8984158383556618137[57] = 0;
   out_8984158383556618137[58] = 0;
   out_8984158383556618137[59] = 0;
   out_8984158383556618137[60] = 0;
   out_8984158383556618137[61] = 0;
   out_8984158383556618137[62] = 0;
   out_8984158383556618137[63] = 0;
   out_8984158383556618137[64] = 0;
   out_8984158383556618137[65] = 0;
}
void h_10(double *state, double *unused, double *out_3222731136212803882) {
   out_3222731136212803882[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3222731136212803882[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3222731136212803882[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8529081772535983422) {
   out_8529081772535983422[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8529081772535983422[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8529081772535983422[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8529081772535983422[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8529081772535983422[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8529081772535983422[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8529081772535983422[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8529081772535983422[7] = 0;
   out_8529081772535983422[8] = 0;
   out_8529081772535983422[9] = 0;
   out_8529081772535983422[10] = 0;
   out_8529081772535983422[11] = 0;
   out_8529081772535983422[12] = 0;
   out_8529081772535983422[13] = 0;
   out_8529081772535983422[14] = 0;
   out_8529081772535983422[15] = 0;
   out_8529081772535983422[16] = 1;
   out_8529081772535983422[17] = 0;
   out_8529081772535983422[18] = 0;
   out_8529081772535983422[19] = 1;
   out_8529081772535983422[20] = 0;
   out_8529081772535983422[21] = 0;
   out_8529081772535983422[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8529081772535983422[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8529081772535983422[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8529081772535983422[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8529081772535983422[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8529081772535983422[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8529081772535983422[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8529081772535983422[29] = 0;
   out_8529081772535983422[30] = 0;
   out_8529081772535983422[31] = 0;
   out_8529081772535983422[32] = 0;
   out_8529081772535983422[33] = 0;
   out_8529081772535983422[34] = 0;
   out_8529081772535983422[35] = 0;
   out_8529081772535983422[36] = 0;
   out_8529081772535983422[37] = 0;
   out_8529081772535983422[38] = 0;
   out_8529081772535983422[39] = 1;
   out_8529081772535983422[40] = 0;
   out_8529081772535983422[41] = 0;
   out_8529081772535983422[42] = 1;
   out_8529081772535983422[43] = 0;
   out_8529081772535983422[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8529081772535983422[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8529081772535983422[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8529081772535983422[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8529081772535983422[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8529081772535983422[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8529081772535983422[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8529081772535983422[51] = 0;
   out_8529081772535983422[52] = 0;
   out_8529081772535983422[53] = 0;
   out_8529081772535983422[54] = 0;
   out_8529081772535983422[55] = 0;
   out_8529081772535983422[56] = 0;
   out_8529081772535983422[57] = 0;
   out_8529081772535983422[58] = 0;
   out_8529081772535983422[59] = 0;
   out_8529081772535983422[60] = 0;
   out_8529081772535983422[61] = 0;
   out_8529081772535983422[62] = 1;
   out_8529081772535983422[63] = 0;
   out_8529081772535983422[64] = 0;
   out_8529081772535983422[65] = 1;
}
void h_12(double *state, double *unused, double *out_4561469184455077752) {
   out_4561469184455077752[0] = state[0];
   out_4561469184455077752[1] = state[1];
   out_4561469184455077752[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4205891622154246987) {
   out_4205891622154246987[0] = 1;
   out_4205891622154246987[1] = 0;
   out_4205891622154246987[2] = 0;
   out_4205891622154246987[3] = 0;
   out_4205891622154246987[4] = 0;
   out_4205891622154246987[5] = 0;
   out_4205891622154246987[6] = 0;
   out_4205891622154246987[7] = 0;
   out_4205891622154246987[8] = 0;
   out_4205891622154246987[9] = 0;
   out_4205891622154246987[10] = 0;
   out_4205891622154246987[11] = 0;
   out_4205891622154246987[12] = 0;
   out_4205891622154246987[13] = 0;
   out_4205891622154246987[14] = 0;
   out_4205891622154246987[15] = 0;
   out_4205891622154246987[16] = 0;
   out_4205891622154246987[17] = 0;
   out_4205891622154246987[18] = 0;
   out_4205891622154246987[19] = 0;
   out_4205891622154246987[20] = 0;
   out_4205891622154246987[21] = 0;
   out_4205891622154246987[22] = 0;
   out_4205891622154246987[23] = 1;
   out_4205891622154246987[24] = 0;
   out_4205891622154246987[25] = 0;
   out_4205891622154246987[26] = 0;
   out_4205891622154246987[27] = 0;
   out_4205891622154246987[28] = 0;
   out_4205891622154246987[29] = 0;
   out_4205891622154246987[30] = 0;
   out_4205891622154246987[31] = 0;
   out_4205891622154246987[32] = 0;
   out_4205891622154246987[33] = 0;
   out_4205891622154246987[34] = 0;
   out_4205891622154246987[35] = 0;
   out_4205891622154246987[36] = 0;
   out_4205891622154246987[37] = 0;
   out_4205891622154246987[38] = 0;
   out_4205891622154246987[39] = 0;
   out_4205891622154246987[40] = 0;
   out_4205891622154246987[41] = 0;
   out_4205891622154246987[42] = 0;
   out_4205891622154246987[43] = 0;
   out_4205891622154246987[44] = 0;
   out_4205891622154246987[45] = 0;
   out_4205891622154246987[46] = 1;
   out_4205891622154246987[47] = 0;
   out_4205891622154246987[48] = 0;
   out_4205891622154246987[49] = 0;
   out_4205891622154246987[50] = 0;
   out_4205891622154246987[51] = 0;
   out_4205891622154246987[52] = 0;
   out_4205891622154246987[53] = 0;
   out_4205891622154246987[54] = 0;
   out_4205891622154246987[55] = 0;
   out_4205891622154246987[56] = 0;
   out_4205891622154246987[57] = 0;
   out_4205891622154246987[58] = 0;
   out_4205891622154246987[59] = 0;
   out_4205891622154246987[60] = 0;
   out_4205891622154246987[61] = 0;
   out_4205891622154246987[62] = 0;
   out_4205891622154246987[63] = 0;
   out_4205891622154246987[64] = 0;
   out_4205891622154246987[65] = 0;
}
void h_35(double *state, double *unused, double *out_7242907357144390178) {
   out_7242907357144390178[0] = state[7];
   out_7242907357144390178[1] = state[8];
   out_7242907357144390178[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1460328589829233278) {
   out_1460328589829233278[0] = 0;
   out_1460328589829233278[1] = 0;
   out_1460328589829233278[2] = 0;
   out_1460328589829233278[3] = 0;
   out_1460328589829233278[4] = 0;
   out_1460328589829233278[5] = 0;
   out_1460328589829233278[6] = 0;
   out_1460328589829233278[7] = 1;
   out_1460328589829233278[8] = 0;
   out_1460328589829233278[9] = 0;
   out_1460328589829233278[10] = 0;
   out_1460328589829233278[11] = 0;
   out_1460328589829233278[12] = 0;
   out_1460328589829233278[13] = 0;
   out_1460328589829233278[14] = 0;
   out_1460328589829233278[15] = 0;
   out_1460328589829233278[16] = 0;
   out_1460328589829233278[17] = 0;
   out_1460328589829233278[18] = 0;
   out_1460328589829233278[19] = 0;
   out_1460328589829233278[20] = 0;
   out_1460328589829233278[21] = 0;
   out_1460328589829233278[22] = 0;
   out_1460328589829233278[23] = 0;
   out_1460328589829233278[24] = 0;
   out_1460328589829233278[25] = 0;
   out_1460328589829233278[26] = 0;
   out_1460328589829233278[27] = 0;
   out_1460328589829233278[28] = 0;
   out_1460328589829233278[29] = 0;
   out_1460328589829233278[30] = 1;
   out_1460328589829233278[31] = 0;
   out_1460328589829233278[32] = 0;
   out_1460328589829233278[33] = 0;
   out_1460328589829233278[34] = 0;
   out_1460328589829233278[35] = 0;
   out_1460328589829233278[36] = 0;
   out_1460328589829233278[37] = 0;
   out_1460328589829233278[38] = 0;
   out_1460328589829233278[39] = 0;
   out_1460328589829233278[40] = 0;
   out_1460328589829233278[41] = 0;
   out_1460328589829233278[42] = 0;
   out_1460328589829233278[43] = 0;
   out_1460328589829233278[44] = 0;
   out_1460328589829233278[45] = 0;
   out_1460328589829233278[46] = 0;
   out_1460328589829233278[47] = 0;
   out_1460328589829233278[48] = 0;
   out_1460328589829233278[49] = 0;
   out_1460328589829233278[50] = 0;
   out_1460328589829233278[51] = 0;
   out_1460328589829233278[52] = 0;
   out_1460328589829233278[53] = 1;
   out_1460328589829233278[54] = 0;
   out_1460328589829233278[55] = 0;
   out_1460328589829233278[56] = 0;
   out_1460328589829233278[57] = 0;
   out_1460328589829233278[58] = 0;
   out_1460328589829233278[59] = 0;
   out_1460328589829233278[60] = 0;
   out_1460328589829233278[61] = 0;
   out_1460328589829233278[62] = 0;
   out_1460328589829233278[63] = 0;
   out_1460328589829233278[64] = 0;
   out_1460328589829233278[65] = 0;
}
void h_32(double *state, double *unused, double *out_6367014881279238872) {
   out_6367014881279238872[0] = state[3];
   out_6367014881279238872[1] = state[4];
   out_6367014881279238872[2] = state[5];
   out_6367014881279238872[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1323329574589184315) {
   out_1323329574589184315[0] = 0;
   out_1323329574589184315[1] = 0;
   out_1323329574589184315[2] = 0;
   out_1323329574589184315[3] = 1;
   out_1323329574589184315[4] = 0;
   out_1323329574589184315[5] = 0;
   out_1323329574589184315[6] = 0;
   out_1323329574589184315[7] = 0;
   out_1323329574589184315[8] = 0;
   out_1323329574589184315[9] = 0;
   out_1323329574589184315[10] = 0;
   out_1323329574589184315[11] = 0;
   out_1323329574589184315[12] = 0;
   out_1323329574589184315[13] = 0;
   out_1323329574589184315[14] = 0;
   out_1323329574589184315[15] = 0;
   out_1323329574589184315[16] = 0;
   out_1323329574589184315[17] = 0;
   out_1323329574589184315[18] = 0;
   out_1323329574589184315[19] = 0;
   out_1323329574589184315[20] = 0;
   out_1323329574589184315[21] = 0;
   out_1323329574589184315[22] = 0;
   out_1323329574589184315[23] = 0;
   out_1323329574589184315[24] = 0;
   out_1323329574589184315[25] = 0;
   out_1323329574589184315[26] = 1;
   out_1323329574589184315[27] = 0;
   out_1323329574589184315[28] = 0;
   out_1323329574589184315[29] = 0;
   out_1323329574589184315[30] = 0;
   out_1323329574589184315[31] = 0;
   out_1323329574589184315[32] = 0;
   out_1323329574589184315[33] = 0;
   out_1323329574589184315[34] = 0;
   out_1323329574589184315[35] = 0;
   out_1323329574589184315[36] = 0;
   out_1323329574589184315[37] = 0;
   out_1323329574589184315[38] = 0;
   out_1323329574589184315[39] = 0;
   out_1323329574589184315[40] = 0;
   out_1323329574589184315[41] = 0;
   out_1323329574589184315[42] = 0;
   out_1323329574589184315[43] = 0;
   out_1323329574589184315[44] = 0;
   out_1323329574589184315[45] = 0;
   out_1323329574589184315[46] = 0;
   out_1323329574589184315[47] = 0;
   out_1323329574589184315[48] = 0;
   out_1323329574589184315[49] = 1;
   out_1323329574589184315[50] = 0;
   out_1323329574589184315[51] = 0;
   out_1323329574589184315[52] = 0;
   out_1323329574589184315[53] = 0;
   out_1323329574589184315[54] = 0;
   out_1323329574589184315[55] = 0;
   out_1323329574589184315[56] = 0;
   out_1323329574589184315[57] = 0;
   out_1323329574589184315[58] = 0;
   out_1323329574589184315[59] = 0;
   out_1323329574589184315[60] = 0;
   out_1323329574589184315[61] = 0;
   out_1323329574589184315[62] = 0;
   out_1323329574589184315[63] = 0;
   out_1323329574589184315[64] = 0;
   out_1323329574589184315[65] = 0;
   out_1323329574589184315[66] = 0;
   out_1323329574589184315[67] = 0;
   out_1323329574589184315[68] = 0;
   out_1323329574589184315[69] = 0;
   out_1323329574589184315[70] = 0;
   out_1323329574589184315[71] = 0;
   out_1323329574589184315[72] = 1;
   out_1323329574589184315[73] = 0;
   out_1323329574589184315[74] = 0;
   out_1323329574589184315[75] = 0;
   out_1323329574589184315[76] = 0;
   out_1323329574589184315[77] = 0;
   out_1323329574589184315[78] = 0;
   out_1323329574589184315[79] = 0;
   out_1323329574589184315[80] = 0;
   out_1323329574589184315[81] = 0;
   out_1323329574589184315[82] = 0;
   out_1323329574589184315[83] = 0;
   out_1323329574589184315[84] = 0;
   out_1323329574589184315[85] = 0;
   out_1323329574589184315[86] = 0;
   out_1323329574589184315[87] = 0;
}
void h_13(double *state, double *unused, double *out_8938041407761873948) {
   out_8938041407761873948[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8938041407761873948[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8938041407761873948[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3336911374531877993) {
   out_3336911374531877993[0] = 0;
   out_3336911374531877993[1] = 0;
   out_3336911374531877993[2] = 0;
   out_3336911374531877993[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3336911374531877993[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3336911374531877993[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3336911374531877993[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3336911374531877993[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3336911374531877993[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3336911374531877993[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3336911374531877993[10] = 0;
   out_3336911374531877993[11] = 0;
   out_3336911374531877993[12] = 0;
   out_3336911374531877993[13] = 0;
   out_3336911374531877993[14] = 0;
   out_3336911374531877993[15] = 0;
   out_3336911374531877993[16] = 0;
   out_3336911374531877993[17] = 0;
   out_3336911374531877993[18] = 0;
   out_3336911374531877993[19] = 0;
   out_3336911374531877993[20] = 0;
   out_3336911374531877993[21] = 0;
   out_3336911374531877993[22] = 0;
   out_3336911374531877993[23] = 0;
   out_3336911374531877993[24] = 0;
   out_3336911374531877993[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3336911374531877993[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3336911374531877993[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3336911374531877993[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3336911374531877993[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3336911374531877993[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3336911374531877993[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3336911374531877993[32] = 0;
   out_3336911374531877993[33] = 0;
   out_3336911374531877993[34] = 0;
   out_3336911374531877993[35] = 0;
   out_3336911374531877993[36] = 0;
   out_3336911374531877993[37] = 0;
   out_3336911374531877993[38] = 0;
   out_3336911374531877993[39] = 0;
   out_3336911374531877993[40] = 0;
   out_3336911374531877993[41] = 0;
   out_3336911374531877993[42] = 0;
   out_3336911374531877993[43] = 0;
   out_3336911374531877993[44] = 0;
   out_3336911374531877993[45] = 0;
   out_3336911374531877993[46] = 0;
   out_3336911374531877993[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3336911374531877993[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3336911374531877993[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3336911374531877993[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3336911374531877993[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3336911374531877993[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3336911374531877993[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3336911374531877993[54] = 0;
   out_3336911374531877993[55] = 0;
   out_3336911374531877993[56] = 0;
   out_3336911374531877993[57] = 0;
   out_3336911374531877993[58] = 0;
   out_3336911374531877993[59] = 0;
   out_3336911374531877993[60] = 0;
   out_3336911374531877993[61] = 0;
   out_3336911374531877993[62] = 0;
   out_3336911374531877993[63] = 0;
   out_3336911374531877993[64] = 0;
   out_3336911374531877993[65] = 0;
}
void h_14(double *state, double *unused, double *out_31636738801653628) {
   out_31636738801653628[0] = state[10];
   out_31636738801653628[1] = state[11];
   out_31636738801653628[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8984158383556618137) {
   out_8984158383556618137[0] = 0;
   out_8984158383556618137[1] = 0;
   out_8984158383556618137[2] = 0;
   out_8984158383556618137[3] = 0;
   out_8984158383556618137[4] = 0;
   out_8984158383556618137[5] = 0;
   out_8984158383556618137[6] = 0;
   out_8984158383556618137[7] = 0;
   out_8984158383556618137[8] = 0;
   out_8984158383556618137[9] = 0;
   out_8984158383556618137[10] = 1;
   out_8984158383556618137[11] = 0;
   out_8984158383556618137[12] = 0;
   out_8984158383556618137[13] = 0;
   out_8984158383556618137[14] = 0;
   out_8984158383556618137[15] = 0;
   out_8984158383556618137[16] = 0;
   out_8984158383556618137[17] = 0;
   out_8984158383556618137[18] = 0;
   out_8984158383556618137[19] = 0;
   out_8984158383556618137[20] = 0;
   out_8984158383556618137[21] = 0;
   out_8984158383556618137[22] = 0;
   out_8984158383556618137[23] = 0;
   out_8984158383556618137[24] = 0;
   out_8984158383556618137[25] = 0;
   out_8984158383556618137[26] = 0;
   out_8984158383556618137[27] = 0;
   out_8984158383556618137[28] = 0;
   out_8984158383556618137[29] = 0;
   out_8984158383556618137[30] = 0;
   out_8984158383556618137[31] = 0;
   out_8984158383556618137[32] = 0;
   out_8984158383556618137[33] = 1;
   out_8984158383556618137[34] = 0;
   out_8984158383556618137[35] = 0;
   out_8984158383556618137[36] = 0;
   out_8984158383556618137[37] = 0;
   out_8984158383556618137[38] = 0;
   out_8984158383556618137[39] = 0;
   out_8984158383556618137[40] = 0;
   out_8984158383556618137[41] = 0;
   out_8984158383556618137[42] = 0;
   out_8984158383556618137[43] = 0;
   out_8984158383556618137[44] = 0;
   out_8984158383556618137[45] = 0;
   out_8984158383556618137[46] = 0;
   out_8984158383556618137[47] = 0;
   out_8984158383556618137[48] = 0;
   out_8984158383556618137[49] = 0;
   out_8984158383556618137[50] = 0;
   out_8984158383556618137[51] = 0;
   out_8984158383556618137[52] = 0;
   out_8984158383556618137[53] = 0;
   out_8984158383556618137[54] = 0;
   out_8984158383556618137[55] = 0;
   out_8984158383556618137[56] = 1;
   out_8984158383556618137[57] = 0;
   out_8984158383556618137[58] = 0;
   out_8984158383556618137[59] = 0;
   out_8984158383556618137[60] = 0;
   out_8984158383556618137[61] = 0;
   out_8984158383556618137[62] = 0;
   out_8984158383556618137[63] = 0;
   out_8984158383556618137[64] = 0;
   out_8984158383556618137[65] = 0;
}
void h_33(double *state, double *unused, double *out_7291516856447189669) {
   out_7291516856447189669[0] = state[16];
   out_7291516856447189669[1] = state[17];
   out_7291516856447189669[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1690228414809624326) {
   out_1690228414809624326[0] = 0;
   out_1690228414809624326[1] = 0;
   out_1690228414809624326[2] = 0;
   out_1690228414809624326[3] = 0;
   out_1690228414809624326[4] = 0;
   out_1690228414809624326[5] = 0;
   out_1690228414809624326[6] = 0;
   out_1690228414809624326[7] = 0;
   out_1690228414809624326[8] = 0;
   out_1690228414809624326[9] = 0;
   out_1690228414809624326[10] = 0;
   out_1690228414809624326[11] = 0;
   out_1690228414809624326[12] = 0;
   out_1690228414809624326[13] = 0;
   out_1690228414809624326[14] = 0;
   out_1690228414809624326[15] = 0;
   out_1690228414809624326[16] = 1;
   out_1690228414809624326[17] = 0;
   out_1690228414809624326[18] = 0;
   out_1690228414809624326[19] = 0;
   out_1690228414809624326[20] = 0;
   out_1690228414809624326[21] = 0;
   out_1690228414809624326[22] = 0;
   out_1690228414809624326[23] = 0;
   out_1690228414809624326[24] = 0;
   out_1690228414809624326[25] = 0;
   out_1690228414809624326[26] = 0;
   out_1690228414809624326[27] = 0;
   out_1690228414809624326[28] = 0;
   out_1690228414809624326[29] = 0;
   out_1690228414809624326[30] = 0;
   out_1690228414809624326[31] = 0;
   out_1690228414809624326[32] = 0;
   out_1690228414809624326[33] = 0;
   out_1690228414809624326[34] = 0;
   out_1690228414809624326[35] = 0;
   out_1690228414809624326[36] = 0;
   out_1690228414809624326[37] = 0;
   out_1690228414809624326[38] = 0;
   out_1690228414809624326[39] = 1;
   out_1690228414809624326[40] = 0;
   out_1690228414809624326[41] = 0;
   out_1690228414809624326[42] = 0;
   out_1690228414809624326[43] = 0;
   out_1690228414809624326[44] = 0;
   out_1690228414809624326[45] = 0;
   out_1690228414809624326[46] = 0;
   out_1690228414809624326[47] = 0;
   out_1690228414809624326[48] = 0;
   out_1690228414809624326[49] = 0;
   out_1690228414809624326[50] = 0;
   out_1690228414809624326[51] = 0;
   out_1690228414809624326[52] = 0;
   out_1690228414809624326[53] = 0;
   out_1690228414809624326[54] = 0;
   out_1690228414809624326[55] = 0;
   out_1690228414809624326[56] = 0;
   out_1690228414809624326[57] = 0;
   out_1690228414809624326[58] = 0;
   out_1690228414809624326[59] = 0;
   out_1690228414809624326[60] = 0;
   out_1690228414809624326[61] = 0;
   out_1690228414809624326[62] = 1;
   out_1690228414809624326[63] = 0;
   out_1690228414809624326[64] = 0;
   out_1690228414809624326[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8855607464613347160) {
  H(in_vec, out_8855607464613347160);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7551466837254102229) {
  err_fun(nom_x, delta_x, out_7551466837254102229);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7083847312756732083) {
  inv_err_fun(nom_x, true_x, out_7083847312756732083);
}
void live_H_mod_fun(double *state, double *out_2417236276350252613) {
  H_mod_fun(state, out_2417236276350252613);
}
void live_f_fun(double *state, double dt, double *out_6846072783341992679) {
  f_fun(state,  dt, out_6846072783341992679);
}
void live_F_fun(double *state, double dt, double *out_7610157667537165676) {
  F_fun(state,  dt, out_7610157667537165676);
}
void live_h_4(double *state, double *unused, double *out_6522284497954344691) {
  h_4(state, unused, out_6522284497954344691);
}
void live_H_4(double *state, double *unused, double *out_9221396043523342834) {
  H_4(state, unused, out_9221396043523342834);
}
void live_h_9(double *state, double *unused, double *out_31636738801653628) {
  h_9(state, unused, out_31636738801653628);
}
void live_H_9(double *state, double *unused, double *out_8984158383556618137) {
  H_9(state, unused, out_8984158383556618137);
}
void live_h_10(double *state, double *unused, double *out_3222731136212803882) {
  h_10(state, unused, out_3222731136212803882);
}
void live_H_10(double *state, double *unused, double *out_8529081772535983422) {
  H_10(state, unused, out_8529081772535983422);
}
void live_h_12(double *state, double *unused, double *out_4561469184455077752) {
  h_12(state, unused, out_4561469184455077752);
}
void live_H_12(double *state, double *unused, double *out_4205891622154246987) {
  H_12(state, unused, out_4205891622154246987);
}
void live_h_35(double *state, double *unused, double *out_7242907357144390178) {
  h_35(state, unused, out_7242907357144390178);
}
void live_H_35(double *state, double *unused, double *out_1460328589829233278) {
  H_35(state, unused, out_1460328589829233278);
}
void live_h_32(double *state, double *unused, double *out_6367014881279238872) {
  h_32(state, unused, out_6367014881279238872);
}
void live_H_32(double *state, double *unused, double *out_1323329574589184315) {
  H_32(state, unused, out_1323329574589184315);
}
void live_h_13(double *state, double *unused, double *out_8938041407761873948) {
  h_13(state, unused, out_8938041407761873948);
}
void live_H_13(double *state, double *unused, double *out_3336911374531877993) {
  H_13(state, unused, out_3336911374531877993);
}
void live_h_14(double *state, double *unused, double *out_31636738801653628) {
  h_14(state, unused, out_31636738801653628);
}
void live_H_14(double *state, double *unused, double *out_8984158383556618137) {
  H_14(state, unused, out_8984158383556618137);
}
void live_h_33(double *state, double *unused, double *out_7291516856447189669) {
  h_33(state, unused, out_7291516856447189669);
}
void live_H_33(double *state, double *unused, double *out_1690228414809624326) {
  H_33(state, unused, out_1690228414809624326);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
